--In this SQL, I analyze a dtat set containing city bike lane safety rating data

--Let's say you work as a data analyst for your city, and your boss wants a list of all the bike lanes that have an average safety rating of 4.0 or higher. 
She also wants to see the average safety rating for each of those bike lanes, and a label that says "Safe Lane".

WITH safety_average_cte AS(
SELECT street, AVG(safetyrating) as 'rating' FROM citybikelanes
GROUP BY street)

SELECT street as "Safe Lane", rating FROM safety_average_cte
WHERE rating >= 4.0;

--Select the individual safety ratings from the two technicians for 2nd street, and the average of those two safety ratings in a new column

SELECT street, safetyrating,
AVG(safetyrating) OVER (PARTITION BY street) as "Average_safety_rating"
FROM CityBikeLanes
WHERE street='2nd'

--Create a list of all the bike lanes, both safety ratings for each lane given by the two technicians, the average safety rating for each lane, and a label with 
the recommendation as "Remove", "Leave As-Is", or "Improvements Needed".
Bike lanes with an average safety rating of 4 or more should be labeled "Leave As-Is".
Bike lanes with an average safety rating of less than 2.5 should be labeled as "Remove".
All other bike lanes should be labeled as "Improvements Needed".

SELECT street, safetyrating,
AVG(safetyrating) OVER (PARTITION BY street) as "Average_safety_rating",
CASE 
WHEN AVG(safetyrating) OVER (PARTITION BY street) >= 4 THEN "Leave As-Is"
WHEN AVG(safetyrating) OVER (PARTITION BY street) < 2.5 THEN "Remove"
ELSE "Improvements Needed"
END AS "Recommendation"
FROM CityBikeLanes
